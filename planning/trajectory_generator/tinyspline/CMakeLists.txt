cmake_minimum_required(VERSION 3.13)
project(tinyspline)

# if(NOT DEFINED TINYSPLINE_OUTPUT_DIRECTORY)
#   set(TINYSPLINE_OUTPUT_DIRECTORY
#       "${CMAKE_CURRENT_BINARY_DIR}/lib"
#       CACHE INTERNAL ""
#   )
# endif()

# list(APPEND
#      TINYSPLINE_CXX_INSTALL_CMAKE_CONFIG_DIR
#      "${TINYSPLINE_INSTALL_LIBRARY_DIR}"
#      "${TINYSPLINE_INSTALL_CMAKE_CONFIG_DIR}"
#      "${TINYSPLINE_CXX_LIBRARY_OUTPUT_NAME}"
# )

# list(JOIN TINYSPLINE_CXX_INSTALL_CMAKE_CONFIG_DIR "/"
#     TINYSPLINE_CXX_INSTALL_CMAKE_CONFIG_DIR
# )

list(APPEND TINYSPLINE_CXX_DEFINITIONS "TINYSPLINE_FLOAT_PRECISION")

# TINYSPLINE_CXX_SOURCE_FILES
list(APPEND TINYSPLINE_C_SOURCE_FILES
     "${CMAKE_CURRENT_SOURCE_DIR}/tinyspline.c"
     "${CMAKE_CURRENT_SOURCE_DIR}/parson.c"
)
list(APPEND TINYSPLINE_CXX_SOURCE_FILES ${TINYSPLINE_C_SOURCE_FILES}
     "${CMAKE_CURRENT_SOURCE_DIR}/tinysplinecxx.cxx"
)

list(APPEND TINYSPLINE_LIBRARY_CXX_FLAGS "-Wall" "-Wextra" "-Wfloat-equal")
set(flags "${TINYSPLINE_LIBRARY_CXX_FLAGS}")
set(TINYSPLINE_INSTALL_INCLUDE_DIR "include"    )
set(TINYSPLINE_CXX_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
set(target "tinysplinecxx")
add_library(${target} SHARED ${TINYSPLINE_CXX_SOURCE_FILES})
target_compile_definitions(${target} PUBLIC ${TINYSPLINE_CXX_DEFINITIONS})    
# target_link_libraries(${target} PRIVATE ${TINYSPLINE_CXX_LINK_LIBRARIES})


target_include_directories(
tinysplinecxx PUBLIC $<BUILD_INTERFACE:${TINYSPLINE_CXX_INCLUDE_DIR}>
                     $<INSTALL_INTERFACE:${TINYSPLINE_INSTALL_INCLUDE_DIR}>
)

install(
TARGETS tinysplinecxx
EXPORT tinysplinecxx
RUNTIME DESTINATION ${TINYSPLINE_INSTALL_BINARY_DIR}
LIBRARY DESTINATION ${TINYSPLINE_INSTALL_LIBRARY_DIR}
ARCHIVE DESTINATION ${TINYSPLINE_INSTALL_LIBRARY_DIR}
PUBLIC_HEADER DESTINATION ${TINYSPLINE_INSTALL_INCLUDE_DIR}
)
  
list(APPEND TINYSPLINE_PKGCONFIG_CXX_LINK_LIBRARIES
    "${TINYSPLINE_CXX_LIBRARY_OUTPUT_NAME}"
)

